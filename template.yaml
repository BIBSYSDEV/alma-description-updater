AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Sets up lambda, api and base path mapping to fetch most recent publication for an author
Parameters:
  CustomDomain:
    Type: AWS::SSM::Parameter::Value<String>
    Default: '/api/domainName'
    Description: (Optional) Custom domain name for the API endpoint
  CustomDomainBasePath:
    Type: String
    Default: 'alma_update'
    Description: (Optional) Base path mapping in CustomDomain
    AllowedPattern: "^[a-zA-Z0-9$\\-_.+!*'(),]*$"
    ConstraintDescription: "May contain only letters, numbers and one of $-_.+!*'(),"
  AlmaBibsEndpointREST:
    Type: String
    Description: Url endpoint to the Alma API bibs
    Default: 'https://api-eu.hosted.exlibrisgroup.com/almaws/v1/bibs/'
  AlmaSruLambda:
    Type: String
    Description: Url endpoint to the alma sru proxy lambda
    Default: 'https://api.sandbox.bibs.aws.unit.no/alma?isbn='
  MaxConcurrency:
    Type: Number
    Default: 20
    Description: Max number of provisioned hot instances for a lambda function
  MinConcurrency:
    Type: Number
    Default: 1
    MaxValue: 1
    MinValue: 1
    Description: Min number of provisioned hot instances for a lambda function

Conditions:
  HasDomainName: !Not [!Equals [!Ref CustomDomain, '']]
  HasCustomDomainBasePath: !Not [!Equals [!Ref CustomDomainBasePath, '']]

Globals:
  Function:
    Timeout: 20
  Api:
    Cors:
      AllowHeaders: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
      AllowMethods: '''OPTIONS, GET'''
      AllowOrigin: '''*'''
    EndpointConfiguration: REGIONAL

Resources:

  getSecretsRole:
    Type: AWS::IAM::ROLE
    Properties:
      RoleName: getSecretsRole
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
              - 'lambda.amazonaws.com'
              - 'apigateway.amazonaws.com'
            Action:
              - 'secretsmanager:GetSecretValue'
            Resource:
              - '*'

  UpdateAlmaDescriptionAPI:
    Type: AWS::Serverless::Api
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W64
            reason: "Skip access logging for artifacts bucket"
          - id: W68
            reason: "Skip encryption for artifacts bucket"
          - id: W69
            reason: "Skip bucket policy for artifacts bucket"
    Properties:
      Name: !Sub "${AWS::StackName}"
      StageName: v1
      EndpointConfiguration:
        Type: REGIONAL
      DefinitionBody:
        openapi: 3.0.3
        info:
          title: Alma description updater
          version: '1.0'
        paths:
          /:
            put:
              summary:  Update an Alma bib record
              description:  Updates an alma bib record based on a provided isbn.
              consumes:
                - application/json
              produces:
                - application/json
              parameters:
                - in: body
                  name: queryStringParameters
                  required: true
                  type: string
                  description: An object containing isbn, description and url.
              x-amazon-apigateway-integration:
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${UpdateAlmaDescriptionFunction.Arn}:live/invocations
                responses: {}
                httpMethod: PUT
                type: AWS_PROXY
              responses:
                '200':
                  description: Event logg
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/updateAlmaResponseBody'
                '400':
                  description: Bad request.
                  content:
                    application/json:
                      schema:
                        title: 400 Bad request
                        type: object
                        properties:
                          error:
                            type: string
                            description: error message
                '500':
                  description: Internal server error.
                  content:
                    application/json:
                      schema:
                        title: 500 internal server error
                        type: object
                        properties:
                          error:
                            type: string
                            description: error message

        components:
          schemas:
            updateAlmaResponseBody:
              title: Event logg
              type: object
              properties:
                title:
                  type: string
                  description: Logg of events from the put against alma api

  UpdateAlmaDescriptionFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      Environment:
        Variables:
          ALLOWED_ORIGIN:  '*'
          ALMA_API_HOST: !Ref AlmaBibsEndpointREST
          ALMA_SRU_HOST: !Ref AlmaSruLambda
      Handler: no.unit.alma.UpdateAlmaDescriptionHandler::handleRequest
      Runtime: java11
      MemorySize: 2048
      Role: !GetAtt getSecretsRole.Arn
      AutoPublishAlias: live
      DeploymentPreference:
        Type: AllAtOnce # Or Canary10Percent5Minutes, Linear10PercentEvery1Minute, ...
      ProvisionedConcurrencyConfig:
        ProvisionedConcurrentExecutions: 1
      Events:
        GetAlmaSruRecordEvent:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            RestApiId: !Ref UpdateAlmaDescriptionAPI
            Method: put
            Path: /

  UpdateAlmaDescriptionFunctionScalableTarget:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    Properties:
      MaxCapacity: !Ref MaxConcurrency
      MinCapacity: !Ref MinConcurrency
      ResourceId: !Sub function:${UpdateAlmaDescriptionFunction}:live # You need to specify an alis or version here
      RoleARN: !Sub arn:aws:iam::${AWS::AccountId}:role/aws-service-role/lambda.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_LambdaConcurrency
      ScalableDimension: lambda:function:ProvisionedConcurrency
      ServiceNamespace: lambda
    DependsOn: UpdateAlmaDescriptionFunctionAliaslive # This is your function logical ID + "Alias" + what you use for AutoPublishAlias

  UpdateAlmaDescriptionFunctionScalingPolicy:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Properties:
      PolicyName: UpdateAlmaDescritionFunctionScalingPolicy
      PolicyType: TargetTrackingScaling
      ScalingTargetId: !Ref UpdateAlmaDescriptionFunctionScalableTarget
      TargetTrackingScalingPolicyConfiguration:
        TargetValue: 0.70 # Any value between 0.1 and 0.9 can be used here
        PredefinedMetricSpecification:
          PredefinedMetricType: LambdaProvisionedConcurrencyUtilization

  UpdateAlmaDescriptionBasePathMapping:
    Type: AWS::ApiGateway::BasePathMapping
    Condition: HasDomainName
    Properties:
      BasePath: !If
        - HasCustomDomainBasePath
        - !Ref CustomDomainBasePath
        - !Ref 'AWS::NoValue'
      DomainName: !Ref CustomDomain
      RestApiId: !Ref UpdateAlmaDescriptionAPI
      Stage: !Ref UpdateAlmaDescriptionAPI.Stage

Outputs:
  ApiEndpoint:
    Description: "Endpoint base URL for the API"
    Value: !If
      - HasDomainName
      - !Sub "https://${CustomDomain}/${CustomDomainBasePath}"
      - !Sub "https://${UpdateAlmaDescriptionAPI}.execute-api.${AWS::Region}.amazonaws.com/${UpdateAlmaDescriptionAPI.Stage}/"