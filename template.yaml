AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Sets up lambda, api and base path mapping to fetch most recent publication for an author
Parameters:
  CustomDomain:
    Type: AWS::SSM::Parameter::Value<String>
    Default: '/api/domainName'
    Description: (Optional) Custom domain name for the API endpoint
  CustomDomainBasePath:
    Type: String
    Default: 'alma_update'
    Description: (Optional) Base path mapping in CustomDomain
    AllowedPattern: "^[a-zA-Z0-9$\\-_.+!*'(),]*$"
    ConstraintDescription: "May contain only letters, numbers and one of $-_.+!*'(),"
  AlmaBibsEndpointREST:
    Type: String
    Description: Url endpoint to the Alma API bibs
    Default: 'https://api-eu.hosted.exlibrisgroup.com/almaws/v1/bibs/'
  AlmaSruLambda:
    Type: String
    Description: Url endpoint to the alma sru proxy lambda
    Default: 'https://api.bibs.aws.unit.no/alma?isbn='
  messageAgeLimitAlmaUpdateQueue:
    Type: Number
    Description: Age limit in month (negativ number) for messages to be put back to retry update Alma for not found records
    Default: -6

Conditions:
  HasDomainName: !Not [!Equals [!Ref CustomDomain, '']]
  HasCustomDomainBasePath: !Not [!Equals [!Ref CustomDomainBasePath, '']]

Globals:
  Function:
    Timeout: 20
  Api:
    Cors:
      AllowHeaders: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
      AllowMethods: '''OPTIONS, GET'''
      AllowOrigin: '''*'''
    EndpointConfiguration: REGIONAL

Resources:

  MessageAgeLimitAlmaUpdateQueue:
    Type: AWS::SSM::Parameter
    Properties:
      Name: messageAgeLimitAlmaUpdateQueue
      Type: Number
      Value: !Ref messageAgeLimitAlmaUpdateQueue
      Description: Age limit in month (negativ number) for messages to be put back to retry update Alma for not found records

  ################
  #
  #  API to be removed
  #
  ################

  UpdateAlmaDescriptionAPI:
    Type: AWS::Serverless::Api
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W64
            reason: "Skip access logging for artifacts bucket"
          - id: W68
            reason: "Skip encryption for artifacts bucket"
          - id: W69
            reason: "Skip bucket policy for artifacts bucket"
    Properties:
      Name: !Sub "${AWS::StackName}"
      StageName: v1
      EndpointConfiguration:
        Type: REGIONAL
      Auth:
        ResourcePolicy:
          CustomStatements:
            - Effect: Allow
              Principal: '*'
              Action: 'execute-api:Invoke'
              Resource: !Sub 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:*/*'
            - Effect: Deny
              Principal: '*'
              Action: 'execute-api:Invoke'
              Resource: !Sub 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:*/*'
              Condition:
                NotIpAddress:
                  'aws:SourceIp':
                    - 35.156.26.140
                    - 80.212.255.137
                    - 158.36.131.0/24
      DefinitionBody:
        openapi: 3.0.3
        info:
          title: Alma description updater
          version: '1.0'
        paths:
          /:
            put:
              summary:  Update an Alma bib record
              description:  Updates an alma bib record based on a provided isbn.
              consumes:
                - application/json
              produces:
                - application/json
              parameters:
                - in: body
                  name: isbn
                  required: true
                  type: string
                  description: ISBN.
                - in: body
                  name: specifiedMaterial
                  required: true
                  type: string
                  description: Explination of what is contained by the url.
                - in: body
                  name: url
                  required: true
                  type: string
                  description: url.
              x-amazon-apigateway-integration:
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${UpdateAlmaDescriptionFunction.Arn}/invocations
                responses: {}
                httpMethod: POST
                type: AWS_PROXY
              responses:
                '200':
                  description: Event logg
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/updateAlmaResponseBody'
                '207':
                  description: Event logg with success and failure
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/updateAlmaResponseBody'
                '400':
                  description: Bad request.
                  content:
                    application/json:
                      schema:
                        title: 400 Bad request
                        type: object
                        properties:
                          error:
                            type: string
                            description: error message
                '500':
                  description: Internal server error.
                  content:
                    application/json:
                      schema:
                        title: 500 internal server error
                        type: object
                        properties:
                          error:
                            type: string
                            description: error message

        components:
          schemas:
            updateAlmaResponseBody:
              title: Event logg
              type: object
              properties:
                title:
                  type: string
                  description: Logg of events from the put against alma api

  ################
  #
  #  Queues
  #
  ################

  DynamodbStreamDLQ:
    Type: AWS::SQS::Queue
    Properties:
      MessageRetentionPeriod: 1209600 #14 days
      ReceiveMessageWaitTimeSeconds: 20
      VisibilityTimeout: 60

  AlmaUpdateQueue:
    Type: AWS::SQS::Queue
    Properties:
      MessageRetentionPeriod: 1209600 #14 days
      ReceiveMessageWaitTimeSeconds: 20
      VisibilityTimeout: 60
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt AlmaUpdateDLQ.Arn
        maxReceiveCount: 3

  AlmaUpdateDLQ:
    Type: AWS::SQS::Queue
    Properties:
      MessageRetentionPeriod: 1209600 #14 days
      ReceiveMessageWaitTimeSeconds: 20
      VisibilityTimeout: 60
      DelaySeconds: 600  # Lang delay så ting ikke skal gå i loop her
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt AlmaUpdateExhausted.Arn
        maxReceiveCount: 2

  AlmaUpdateExhausted:
    Type: AWS::SQS::Queue
    Properties:
      MessageRetentionPeriod: 1209600 #14 days
      ReceiveMessageWaitTimeSeconds: 20
      VisibilityTimeout: 60

  AlmaDLQAlarmNotification:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub "AlmaDLQAlarmNotification-${AWS::StackName}"

  AlmaDLQAlarmNotificationPolicy:
    Type: AWS::SNS::TopicPolicy
    Properties:
      Topics:
        - !Ref AlmaDLQAlarmNotification
      PolicyDocument:
        Statement:
          - Sid: AlarmSNS
            Effect: Allow
            Principal:
              AWS: "*"
            Action:
              - SNS:Publish
            Resource: !Ref AlmaDLQAlarmNotification
            Condition:
              StringEquals:
                AWS:SourceOwner: !Ref AWS::AccountId


  ################
  #
  #  Lambda
  #
  ################

  StreamReader:
    Type: AWS::Serverless::Function
    Properties:
      Description: A Lambda function that get data from dynamodb and put in sqs
      Runtime: nodejs12.x
      Handler: node/schedulerSystem.streamReader
      Environment:
        Variables:
          SqsUrlAlma: !Ref AlmaUpdateQueue
      Events:
        DynamoDBEvent:
          Type: DynamoDB
          Properties:
            BatchSize: 100 #Default
            Stream: '{{resolve:ssm:dynamoDBStreamArnContents:1}}'
            StartingPosition: LATEST
            MaximumBatchingWindowInSeconds: 5
            MaximumRecordAgeInSeconds: 60
            MaximumRetryAttempts: 2
            DestinationConfig:
              OnFailure:
                Destination: !GetAtt DynamodbStreamDLQ.Arn # Writes batch-meta-info to SQS if everything fails
      MemorySize: 128
      Timeout: 55
      Policies:
        - AWSLambdaBasicExecutionRole
        - SQSSendMessagePolicy:
            QueueName:
              !GetAtt DynamodbStreamDLQ.QueueName
        - SQSSendMessagePolicy:
            QueueName:
              !GetAtt AlmaUpdateQueue.QueueName
        - DynamoDBStreamReadPolicy:
            TableName: '{{resolve:ssm:dynamoDBTableNameContents:1}}'
            StreamName: "*"

  UpdateAlmaDescriptionFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      Environment:
        Variables:
          ALLOWED_ORIGIN: '*'
          ALMA_API_HOST: !Ref AlmaBibsEndpointREST
          ALMA_SRU_HOST: !Ref AlmaSruLambda
      Handler: no.unit.alma.UpdateAlmaDescriptionHandler::handleRequest
      Runtime: java11
      MemorySize: 2048
      Policies:
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: '*'
      Events:
        GetAlmaSruRecordEvent:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            RestApiId: !Ref UpdateAlmaDescriptionAPI
            Method: put
            Path: /

  AlmaErrorHandler:
    Type: AWS::Serverless::Function
    Properties:
      Description: A Lambda function that handles Alma DLQ
      Runtime: nodejs12.x
      Handler: node/schedulerSystem.almaErrorHandler
      Environment:
        Variables:
          SqsUrlAlmaQ: !Ref AlmaUpdateQueue
          SqsUrlAlmaDLQ: !Ref AlmaUpdateDLQ
          durationToRetryNotFoundRecordsInMonth: '{{resolve:ssm:durationToRetryNotFoundRecordsInMonth:1}}'
      Events:
        SQSQueueEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt AlmaUpdateDLQ.Arn
            BatchSize: 1
            Enabled: false
      ReservedConcurrentExecutions: 1
      MemorySize: 128
      Timeout: 55
      Policies:
        - AWSLambdaBasicExecutionRole
        - SQSSendMessagePolicy:
            QueueName:
              !GetAtt AlmaUpdateQueue.QueueName


  AlmaErrorScheduler:
    Type: AWS::Serverless::Function
    Properties:
      Description: A Lambda function that schdules DLQ-reads based on alarms
      Runtime: nodejs12.x
      Handler: node/schedulerSystem.almaErrorScheduler
      Environment:
        Variables:
          SqsUrlAlmaQ: !Ref AlmaUpdateQueue
          SqsUrlAlmaDLQ: !Ref AlmaUpdateDLQ
          ErrorHandlerSwitch: !Ref AlmaErrorHandlerSQSQueueEvent
      Events:
        SNSEvent:
          Type: SNS
          Properties:
            Topic: !Ref AlmaDLQAlarmNotification
      ReservedConcurrentExecutions: 1
      MemorySize: 128
      Timeout: 55
      Policies:
        - AWSLambdaBasicExecutionRole
        - SQSSendMessagePolicy:
            QueueName:
              !GetAtt AlmaUpdateQueue.QueueName
        - Statement:
            Effect: Allow
            Action: lambda:UpdateEventSourceMapping
            Resource: !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:event-source-mapping:${AlmaErrorHandlerSQSQueueEvent}

  ################
  #
  #  Alarms
  #
  ################

  UpdateSchdulerAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmDescription: Enables emptying of retry-DLQ
      AlarmName: !Sub UpdateSchduler-${AWS::StackName}
      DatapointsToAlarm: 1
      Dimensions:
        - Name: QueueName
          Value: !GetAtt  AlmaUpdateDLQ.QueueName
      EvaluationPeriods: 1
      MetricName: ApproximateAgeOfOldestMessage
      Namespace: AWS/SQS
      Period: 60
      Statistic: Average
      ComparisonOperator: GreaterThanThreshold
      Threshold: 7200.0
      TreatMissingData: notBreaching
      AlarmActions:
        - !Ref AlmaDLQAlarmNotification
      OKActions:
        - !Ref AlmaDLQAlarmNotification

  ################
  #
  #  Other stuff
  #
  ################

  UpdateAlmaDescriptionBasePathMapping:
    Type: AWS::ApiGateway::BasePathMapping
    Condition: HasDomainName
    Properties:
      BasePath: !If
        - HasCustomDomainBasePath
        - !Ref CustomDomainBasePath
        - !Ref 'AWS::NoValue'
      DomainName: !Ref CustomDomain
      RestApiId: !Ref UpdateAlmaDescriptionAPI
      Stage: !Ref UpdateAlmaDescriptionAPI.Stage

Outputs:
  ApiEndpoint:
    Description: "Endpoint base URL for the API"
    Value: !If
      - HasDomainName
      - !Sub "https://${CustomDomain}/${CustomDomainBasePath}"
      - !Sub "https://${UpdateAlmaDescriptionAPI}.execute-api.${AWS::Region}.amazonaws.com/${UpdateAlmaDescriptionAPI.Stage}/"